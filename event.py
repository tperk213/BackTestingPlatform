from my_utils import params_to_attr


class Event:
    def __init__(self):

        pass


class MarketEvent(Event):

    """
        is just used as a signal that there is new data to be analysed
    """

    def __init__(self):

        self.type = "MARKET"


class SignalEvent(Event):
    """
        generated by stratergy
        handled by portfolio
    """

    @params_to_attr
    def __init__(self, symbol, datetime, signal_type, strength):
        """
            Params:
                datetime: 
                    timestamp of when signal was generated
                signal_type:
                    "LONG" or "SHORT"
                symbol:
                    "GOOG" ticker
                strength:
                    scale adjustment for buy_sell quantity, useful in pairs strats
        """

        self.type = "SIGNAL"


class OrderEvent(Event):
    """
        Generated by portfolio
        handled by execution

        models an order of a stock
    """

    @params_to_attr
    def __init__(self, symbol, quantity, direction):
        """
            Params:
                order_type:
                    "MARKET" or "LIMIT"
                quantity:
                    integer for quantity desired
                direction:
                    "BUY" or "SELL"
                symbol:
                    "APPL"
        """
        self.type = "ORDER"


class FillEvent(Event):
    """
        generated by execution
        handled by portfolio
        models what actually was filled from an order
    """

    @params_to_attr
    def __init__(self, symbol, quantity, direction, fill_cost, commission=None):

        self.type = "FILL"


##############################################################
